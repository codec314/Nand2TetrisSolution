// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    Mux8Way16(a=in, b=false, c=false, d=false, e=false, f=false, g=false, h=false, sel=address, out=rega);
    Mux8Way16(a=false, b=in, c=false, d=false, e=false, f=false, g=false, h=false, sel=address, out=regb);
    Mux8Way16(a=false, b=false, c=in, d=false, e=false, f=false, g=false, h=false, sel=address, out=regc);
    Mux8Way16(a=false, b=false, c=false, d=in, e=false, f=false, g=false, h=false, sel=address, out=regd);
    Mux8Way16(a=false, b=false, c=false, d=false, e=in, f=false, g=false, h=false, sel=address, out=rege);
    Mux8Way16(a=false, b=false, c=false, d=false, e=false, f=in, g=false, h=false, sel=address, out=regf);
    Mux8Way16(a=false, b=false, c=false, d=false, e=false, f=false, g=in, h=false, sel=address, out=regg);
    Mux8Way16(a=false, b=false, c=false, d=false, e=false, f=false, g=false, h=in, sel=address, out=regh);
    Register(in=rega, load=load, out=out);
    Register(in=regb, load=load, out=out);
}
